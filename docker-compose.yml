version: '3.8'

services:
  html-proxy:
    build:
      context: .
      target: production
    ports:
      - "${PORT:-8080}:8080"
      - "${MONITORING_PORT:-9090}:9090"  # Monitoring endpoints
    environment:
      - NODE_ENV=production
      - PORT=8080
      # Architecture Mode
      - ARCHITECTURE_MODE=${ARCHITECTURE_MODE:-enhanced}
      # Legacy Configuration
      - DEFAULT_MODE=${DEFAULT_MODE:-crawlee-browser}
      - TIMEOUT_MS=${TIMEOUT_MS:-20000}
      - MAX_RETRIES=${MAX_RETRIES:-2}
      - USER_AGENT=${USER_AGENT:-Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36}
      - CACHE_ENABLED=${CACHE_ENABLED:-true}
      - CACHE_MAX_SIZE=${CACHE_MAX_SIZE:-500}
      - CACHE_TTL_MS=${CACHE_TTL_MS:-300000}
      - ALLOW_PRIVATE_NETWORKS=${ALLOW_PRIVATE_NETWORKS:-false}
      - BLOCKLIST_HOSTS=${BLOCKLIST_HOSTS:-}
      - PROXIES=${PROXIES:-}
      - PROXIES_FILE=${PROXIES_FILE:-}
      - USE_CRAWLEE=${USE_CRAWLEE:-true}
      - MAX_SESSIONS=${MAX_SESSIONS:-20}
      - SESSION_MAX_USAGE=${SESSION_MAX_USAGE:-50}
      - SESSION_MAX_ERRORS=${SESSION_MAX_ERRORS:-3}
      - FINGERPRINT_BROWSERS=${FINGERPRINT_BROWSERS:-chrome,firefox}
      - FINGERPRINT_DEVICES=${FINGERPRINT_DEVICES:-desktop,mobile}
      - FINGERPRINT_LOCALES=${FINGERPRINT_LOCALES:-en-US,en-GB}
      - FINGERPRINT_OS=${FINGERPRINT_OS:-linux,windows,macos}
      - MAX_CRAWLERS=${MAX_CRAWLERS:-5}
      - CRAWLER_IDLE_TIMEOUT_MS=${CRAWLER_IDLE_TIMEOUT_MS:-300000}
      # Enhanced Architecture Configuration
      - ENABLE_RESOURCE_POOLING=${ENABLE_RESOURCE_POOLING:-true}
      - HTTP_POOL_MIN_SIZE=${HTTP_POOL_MIN_SIZE:-2}
      - HTTP_POOL_MAX_SIZE=${HTTP_POOL_MAX_SIZE:-10}
      - BROWSER_POOL_MIN_SIZE=${BROWSER_POOL_MIN_SIZE:-1}
      - BROWSER_POOL_MAX_SIZE=${BROWSER_POOL_MAX_SIZE:-5}
      - ENABLE_INTELLIGENT_ROUTING=${ENABLE_INTELLIGENT_ROUTING:-true}
      - ROUTING_STRATEGY=${ROUTING_STRATEGY:-ml}
      - CIRCUIT_BREAKER_ENABLED=${CIRCUIT_BREAKER_ENABLED:-true}
      - CIRCUIT_BREAKER_THRESHOLD=${CIRCUIT_BREAKER_THRESHOLD:-5}
      - CIRCUIT_BREAKER_TIMEOUT_MS=${CIRCUIT_BREAKER_TIMEOUT_MS:-60000}
      - ENABLE_MONITORING=${ENABLE_MONITORING:-true}
      - MONITORING_PORT=${MONITORING_PORT:-9090}
      - METRICS_ENABLED=${METRICS_ENABLED:-true}
      - METRICS_FLUSH_INTERVAL_MS=${METRICS_FLUSH_INTERVAL_MS:-30000}
      # Logging
      - VERBOSE=${VERBOSE:-false}
      - LOG_LEVEL=${LOG_LEVEL:-}
    volumes:
      - html-proxy-storage:/app/storage
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const options = { hostname: 'localhost', port: 8080, path: '/healthz', timeout: 5000 }; const req = http.request(options, (res) => { if (res.statusCode === 200) { process.exit(0); } else { process.exit(1); } }); req.on('error', () => { process.exit(1); }); req.end();"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /app/storage:noexec,nosuid,size=500m

volumes:
  html-proxy-storage:
    driver: local
